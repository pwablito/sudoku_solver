from puzzle import Puzzle


def test_validation():
    valid_puzzle = Puzzle([
        [1, -1, -1, 2, -1, -1, 3, -1, -1],
        [4, -1, -1, 5, -1, -1, 6, -1, -1],
        [7, -1, -1, 8, -1, -1, 9, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1],
    ])
    assert valid_puzzle.is_valid()
    invalid_puzzle = Puzzle([
        [1, -1, 1, 2, -1, -1, 3, -1, -1],
        [4, -1, -1, 5, -1, -1, 6, -1, -1],
        [7, -1, -1, 8, -1, -1, 9, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1],
    ])
    assert not invalid_puzzle.is_valid()
    invalid_puzzle = Puzzle([
        [1, -1, -1, 2, -1, -1, 3, -1, -1],
        [4, -1, -1, 5, -1, -1, 6, -1, -1],
        [7, -1, 1, 8, -1, -1, 9, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1],
    ])
    assert not invalid_puzzle.is_valid()
    invalid_puzzle = Puzzle([
        [1, -1, -1, 2, -1, -1, 3, -1, -1],
        [1, -1, -1, 5, -1, -1, 6, -1, -1],
        [7, -1, -1, 8, -1, -1, 9, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1],
    ])
    assert not invalid_puzzle.is_valid()


def test_check_solved():
    unsolved_puzzle = Puzzle([
        [1, -1, -1, 2, -1, -1, 3, -1, -1],
        [4, -1, -1, 5, -1, -1, 6, -1, -1],
        [7, -1, -1, 8, -1, -1, 9, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1],
    ])
    assert not unsolved_puzzle.is_solved()
    solved_puzzle = Puzzle([
        []
        # TODO create a solved puzzle
    ])
    assert solved_puzzle.is_solved()
